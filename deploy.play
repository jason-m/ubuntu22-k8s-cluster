---

- hosts: all
  become: yes
  tasks:

    - name: Install ContainerD
      ansible.builtin.apt:
        name: containerd
        update_cache: yes
        state: present

    - name: make /etc/containerd
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        owner: root
        group: root

    - name: generate conf
      ansible.builtin.shell:
        cmd: containerd config default > /etc/containerd/config.toml

    - name: modify conf file
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        state: present
        regexp: 'SystemdCgroup = false'
        line: '            SystemdCgroup = true'
    - name: Start ContainerD
      ansible.builtin.systemd:
        name: containerd
        state: started
        enabled: yes     


    - name: create modules.d file
      ansible.builtin.file:
        path: /etc/modules-load.d/k8s.conf
        state: touch
        owner: root
        group: root

    - name: add netfilter line to modules.d file
      ansible.builtin.lineinfile:
        path: /etc/modules-load.d/k8s.conf
        state: present
        line: 'br_netfilter'

    - name: load module
      ansible.builtin.shell:
        cmd: /usr/sbin/modprobe br_netfilter

    - name: create sysctl.d/k8s.conf
      ansible.builtin.file:
        path: /etc/sysctl.d/k8s.conf
        state: touch
        owner: root
        group: root

    - name: enable ipv4 routing
      ansible.builtin.lineinfile:
        path: /etc/sysctl.d/k8s.conf
        state: present
        line: 'net.ipv4.ip_forward=1'

    - name: enable ipv4 routing
      ansible.builtin.shell:
        cmd: /usr/sbin/sysctl net.ipv4.ip_forward=1

    - name: Intall GPG Key
      ansible.builtin.get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /usr/share/keyrings/kubernetes-archive-keyring.gpg

    - name: Create sources.list.d file
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/kubernetes.list
        state: touch

    - name: add repo to sources.list.d
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/kubernetes.list
        line: 'deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main'

    - name: Update APT
      ansible.builtin.apt:
        update_cache: yes
        upgrade: yes

    - name: Install Kubernetes stuff
      ansible.builtin.apt:
        state: present
        name:
          - kubeadm
          - kubectl
          - kubelet


- hosts: k8scontroller
  become: yes
  tasks:

    - name: Initialize Controller
      ansible.builtin.shell:
        cmd: kubeadm init --control-plane-endpoint="{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}" --node-name="{{ ansible_host.split('.')[0] }}" --pod-network-cidr=10.244.0.0/16 > /root/k8s-init.txt

    - name: create .kube directory
      ansible.builtin.file:
        path: /root/.kube/
        state: directory

    - name: link .kube/config 
      ansible.builtin.file:
        src: /etc/kubernetes/admin.conf
        dest: /root/.kube/config
        state: link

    - name: Pause for 1 minutes to build app cache
      ansible.builtin.pause:
        minutes: 1


    - name: Initialize overlay network
      ansible.builtin.shell:
        cmd: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml

    - name: get join command
      shell: kubeadm token create --print-join-command
      register: joincmdraw

    - name: save fact
      set_fact: 
        joincmd:  "{{ joincmdraw.stdout_lines[0] }}"

- hosts: k8snodes
  become: yes
  tasks:

    - name: join nodes 
      shell: "{{ hostvars['k8scontroller'].joincmd }}"